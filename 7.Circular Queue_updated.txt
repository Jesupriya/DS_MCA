#include<stdio.h>
#include<conio.h>
#include<stdlib.h>


struct node{
	int data;
	struct node *next;
};

struct node *front=NULL;
struct node *rear=NULL;


void enqueue(int x)
{
	struct node *newnode; 
	newnode=(struct node *)malloc(sizeof(struct node));
	newnode->data=x;
	newnode->next=0;
	if(rear==NULL) 
	{
		front=rear=newnode;
		rear->next=front;
	}
	else{
		rear->next=newnode;
		rear=newnode;
		rear->next=front;
	}
}


void dequeue()
{
	struct node *temp; 
	temp=front;
	if((front==NULL)&&(rear==NULL)) 
	{
		printf("\nQueue is empty");
	}
	else if(front==rear) 
	{
		front=rear=NULL;
		free(temp);
	}else{
		front=front->next;
		rear->next=front;
		free(temp);
	}
}


int peek()
{
	if((front==NULL) &&(rear==NULL)){
		printf("\nQueue is empty");
	}
	else{
		printf("\nThe front element is %d", front->data);
	}
}


void display()
{
	struct node *temp;
	temp=front;
	printf("\n The elements in a Queue are : ");
	if((front==NULL) && (rear==NULL)){
		printf("Queue is empty");
	}
	else{
		while(temp->next!=front)
		{
			printf("%d,", temp->data);
			temp=temp->next;
		}
		printf("%d", temp->data);
	}
}

void main()
{
	//clrscr();
	enqueue(5);
	enqueue(7);
	enqueue(0);
	enqueue(6);
	enqueue(3);
	enqueue(9);
	display();
	dequeue();
	printf("\n\n After deleting the queue elements are : \n");
	display();
	peek();
	getch();
}
